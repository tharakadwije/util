<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <organization>
        <name>EROAD</name>
        <url>http://www.eroad.com/</url>
    </organization>

    <modules>
        <module>myeroad-messaging-service-api</module>
    </modules>

    <groupId>nz.co.eroad</groupId>
    <artifactId>myeroad-messaging-service</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>Myeroad-messaging-service Project</name>
    <url>http://www.eroad.co.nz</url>

    <scm>
        <connection>scm:git:git:://github.com:eroad/myeroad-messaging-service.git</connection>
        <developerConnection>scm:git:git@github.com:eroad/myeroad-messaging-service.git</developerConnection>
        <url>https://github.com/eroad/myeroad-messaging-service</url>
        <tag>HEAD</tag>
    </scm>

    <properties>
        <!-- Project settings -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <!-- Java settings -->
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.compiler.source>1.8</maven.compiler.source>
        <!-- Sonar -->
        <sonar.jacoco.itReportPath>${project.basedir}/target/jacoco-it.exec</sonar.jacoco.itReportPath>
        <sonar.jacoco.reportPath>${project.basedir}/target/jacoco.exec</sonar.jacoco.reportPath>
        <sonar.language>java</sonar.language>
        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <!-- Api -->
        <common-resources.version>11.12.2</common-resources.version>
        <eroad.dynamic-logging.version>1.0.4</eroad.dynamic-logging.version>
        <configuration-core.version>4.8.0</configuration-core.version>
        <discovery-core.version>4.4.2</discovery-core.version>
        <discovery-soap.version>5.2.7</discovery-soap.version>
        <central-client.version>20.23.19</central-client.version>
        <user-client.version>9.4.0</user-client.version>
        <notification-client.version>6.6.2</notification-client.version>
        <spring-boot-dependencies.version>2.2.8.RELEASE</spring-boot-dependencies.version>
        <software.amazon.awssdk.version>2.13.50</software.amazon.awssdk.version>
        <swagger-annotations.version>1.6.1</swagger-annotations.version>
        <jackson-databind-nullable.version>0.2.1</jackson-databind-nullable.version>
        <jackson-datatype-json-org.version>2.9.0</jackson-datatype-json-org.version>
        <metrics-spring.version>3.1.3</metrics-spring.version>
        <mapstruct.version>1.4.2.Final</mapstruct.version>
        <resilience4j-all.version>1.5.0</resilience4j-all.version>
        <resilience4j-spring-boot2.version>1.5.0</resilience4j-spring-boot2.version>
        <json.version>20200518</json.version>
        <logstash-logback-encoder.version>6.4</logstash-logback-encoder.version>
        <!-- Plugins -->
        <maven-checkstyle-plugin.version>3.1.1</maven-checkstyle-plugin.version>
        <swagger-codegen-maven-plugin.version>3.0.18</swagger-codegen-maven-plugin.version>
        <jacoco-maven-plugin.version>0.8.5</jacoco-maven-plugin.version>
        <maven-failsafe-plugin.version>2.22.2</maven-failsafe-plugin.version>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-failsafe-plugin.version}</version>
                <configuration>
                    <environmentVariables>
                        <AWS_REGION>ap-southeast-2</AWS_REGION>
                    </environmentVariables>
                    <argLine>${jacoco.agent.ut.arg} -Duser.timezone=UTC</argLine>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven-failsafe-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <skipAfterFailureCount>1</skipAfterFailureCount>
                            <argLine>${jacoco.agent.it.arg} -Duser.timezone=UTC</argLine>
                            <reuseForks>false</reuseForks>
                            <environmentVariables>
                                <AWS_REGION>ap-southeast-2</AWS_REGION>
                            </environmentVariables>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>nz/co/eroad/messaging/model/*</exclude>
                        <exclude>nz/co/eroad/messaging/api/*.class</exclude>
                        <exclude>nz/co/eroad/messaging/api/config/*</exclude>
                        <exclude>nz/co/eroad/messaging/api/exception/*</exclude>
                        <exclude>nz/co/eroad/messaging/api/filter/*</exclude>
                        <exclude>nz/co/eroad/messaging/api/future/*</exclude>
                        <exclude>nz/co/eroad/messaging/api/util/*</exclude>
                        <exclude>nz/co/eroad/messaging/api/r4j/*</exclude>
                        <exclude>nz/co/eroad/messaging/api/model/*</exclude>
                        <exclude>nz/co/eroad/messaging/api/remote/*</exclude>
                        <exclude>nz/co/eroad/messaging/api/service/NotificationService.class</exclude>
                        <exclude>nz/co/eroad/messaging/api/service/CentralService.class</exclude>
                        <exclude>nz/co/eroad/messaging/api/resource/CorsController.class</exclude>
                        <exclude>nz/co/eroad/messaging/api/mapper/*MapperImpl.class</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <id>agent-for-ut</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <propertyName>jacoco.agent.ut.arg</propertyName>
                            <append>true</append>
                            <destFile>${sonar.jacoco.reportPath}</destFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>agent-for-it</id>
                        <goals>
                            <goal>prepare-agent-integration</goal>
                        </goals>
                        <configuration>
                            <propertyName>jacoco.agent.it.arg</propertyName>
                            <append>true</append>
                            <destFile>${sonar.jacoco.itReportPath}</destFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${sonar.jacoco.reportPath}</dataFile>
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>report-it</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${sonar.jacoco.itReportPath}</dataFile>
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven-checkstyle-plugin.version}</version>
                <executions>
                    <execution>
                        <id>validate</id>
                        <phase>validate</phase>
                        <configuration>
                            <configLocation>check-style.xml</configLocation>
                            <encoding>UTF-8</encoding>
                            <consoleOutput>true</consoleOutput>
                            <failsOnError>true</failsOnError>
                        </configuration>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>nz.co.eroad</groupId>
                <artifactId>common-resources</artifactId>
                <version>${common-resources.version}</version>
            </dependency>
            <dependency>
                <groupId>nz.co.eroad</groupId>
                <artifactId>configuration-core</artifactId>
                <version>${configuration-core.version}</version>
            </dependency>
            <dependency>
                <groupId>nz.co.eroad</groupId>
                <artifactId>discovery-core</artifactId>
                <version>${discovery-core.version}</version>
            </dependency>
            <dependency>
                <groupId>nz.co.eroad</groupId>
                <artifactId>discovery-soap</artifactId>
                <version>${discovery-soap.version}</version>
            </dependency>
            <dependency>
                <groupId>nz.co.eroad</groupId>
                <artifactId>central-client</artifactId>
                <version>${central-client.version}</version>
            </dependency>
            <dependency>
                <groupId>nz.co.eroad</groupId>
                <artifactId>user-client</artifactId>
                <version>${user-client.version}</version>
            </dependency>
            <dependency>
                <groupId>nz.co.eroad</groupId>
                <artifactId>notification-client</artifactId>
                <version>${notification-client.version}</version>
            </dependency>
            <dependency>
                <groupId>nz.co.eroad</groupId>
                <artifactId>dynamic-logging</artifactId>
                <version>${eroad.dynamic-logging.version}</version>
            </dependency>
            <dependency>
                <groupId>nz.co.eroad</groupId>
                <artifactId>central-event-persister</artifactId>
                <version>${central-event-persister.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot-dependencies.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>aws-core</artifactId>
                <version>${software.amazon.awssdk.version}</version>
            </dependency>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>url-connection-client</artifactId>
                <version>${software.amazon.awssdk.version}</version>
            </dependency>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>dynamodb</artifactId>
                <version>${software.amazon.awssdk.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>software.amazon.awssdk</groupId>
                        <artifactId>netty-nio-client</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>software.amazon.awssdk</groupId>
                        <artifactId>apache-client</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.ryantenney.metrics</groupId>
                <artifactId>metrics-spring</artifactId>
                <version>${metrics-spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>io.github.resilience4j</groupId>
                <artifactId>resilience4j-all</artifactId>
                <version>${resilience4j-all.version}</version>
            </dependency>
            <dependency>
                <groupId>io.github.resilience4j</groupId>
                <artifactId>resilience4j-spring-boot2</artifactId>
                <version>${resilience4j-spring-boot2.version}</version>
            </dependency>
            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${swagger-annotations.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openapitools</groupId>
                <artifactId>jackson-databind-nullable</artifactId>
                <version>${jackson-databind-nullable.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-json-org</artifactId>
                <version>${jackson-datatype-json-org.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.apache.geronimo.bundles</groupId>
                        <artifactId>json</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.json</groupId>
                <artifactId>json</artifactId>
                <version>${json.version}</version>
            </dependency>
            <dependency>
                <groupId>net.logstash.logback</groupId>
                <artifactId>logstash-logback-encoder</artifactId>
                <version>${logstash-logback-encoder.version}</version>
            </dependency>
            <dependency>
                <groupId>org.awaitility</groupId>
                <artifactId>awaitility</artifactId>
                <version>${awaitility.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers</artifactId>
                <version>${testcontainers.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <profiles>
        <profile>
            <id>validation</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.6.0</version>
                        <inherited>false</inherited>
                        <executions>
                            <execution>
                                <id>validate-pipeline</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>scripts/verify/pipeline.sh</executable>
                                    <arguments>
                                        <argument>ci/pipeline.yml</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>validate-api</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>scripts/verify/api.sh</executable>
                                    <arguments>
                                        <argument>api.json</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>validate-dockerfile-build</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>scripts/verify/dockerfile.sh</executable>
                                    <arguments>
                                        <argument>build/Dockerfile</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>validate-local-dev-dockerfile</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>scripts/verify/dockerfile.sh</executable>
                                    <arguments>
                                        <argument>local-dev/vanilla/Dockerfile</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>validate-cloudformation-ecr</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>scripts/verify/cloudformation.sh</executable>
                                    <arguments>
                                        <argument>build/cloudformation/ecr/template.yml</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>validate-cloudformation-api</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>scripts/verify/cloudformation.sh</executable>
                                    <arguments>
                                        <argument>build/cloudformation/api/template.yml</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>validate-cloudformation-application</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>scripts/verify/cloudformation.sh</executable>
                                    <arguments>
                                        <argument>build/cloudformation/application/template.yml</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>validate-cloudformation-lint-ecr</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>scripts/verify/cloudformation-lint.sh</executable>
                                    <arguments>
                                        <argument>build/cloudformation/ecr/template.yml</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>validate-cloudformation-lint-api</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>scripts/verify/cloudformation-lint.sh</executable>
                                    <arguments>
                                        <argument>build/cloudformation/api/template.yml</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>validate-cloudformation-lint-application</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>scripts/verify/cloudformation-lint.sh</executable>
                                    <arguments>
                                        <argument>build/cloudformation/application/template.yml</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>validate-cloudformation-security-ecr</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>scripts/verify/cloudformation-security.sh</executable>
                                    <arguments>
                                        <argument>build/cloudformation/ecr/template.yml</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>validate-cloudformation-security-api</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>scripts/verify/cloudformation-security.sh</executable>
                                    <arguments>
                                        <argument>build/cloudformation/api/template.yml</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>validate-cloudformation-security-application</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>scripts/verify/cloudformation-security.sh</executable>
                                    <arguments>
                                        <argument>build/cloudformation/application/template.yml</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>validate-app-local-application-yml</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>scripts/verify/yml.sh</executable>
                                    <arguments>
                                        <argument>
                                            myeroad-messaging-service-api/src/main/resources-local/application.yml
                                        </argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>validate-app-server-application-yml</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>scripts/verify/yml.sh</executable>
                                    <arguments>
                                        <argument>
                                            myeroad-messaging-service-api/src/main/resources-server/application.yml
                                        </argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>validate-app-server-logback-xml</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>scripts/verify/xml.sh</executable>
                                    <arguments>
                                        <argument>myeroad-messaging-service-api/src/main/resources-server/logback.xml
                                        </argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <repositories>
        <repository>
            <id>central</id>
            <name>Nexus Central</name>
            <url>http://central</url>
            <releases>
            </releases>
            <snapshots>
            </snapshots>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>central</id>
            <url>http://central</url>
            <releases>
            </releases>
            <snapshots>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <distributionManagement>
        <repository>
            <id>releases</id>
            <url>https://nexus.eroad.io/content/repositories/releases</url>
        </repository>
        <snapshotRepository>
            <id>snapshots</id>
            <url>https://nexus.eroad.io/content/repositories/snapshots</url>
        </snapshotRepository>
    </distributionManagement>
</project>